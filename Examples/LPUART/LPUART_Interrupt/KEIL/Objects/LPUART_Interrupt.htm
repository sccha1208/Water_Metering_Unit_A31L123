<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\LPUART_Interrupt.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\LPUART_Interrupt.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Oct 21 16:20:58 2025
<BR><P>
<H3>Maximum Stack Usage =        116 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
UARTPutDec32 &rArr; UARTPutChar &rArr; HAL_UART_Transmit
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1e]">ADC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[22]">CMPn_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[23]">DMAC0_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[24]">DMAC1_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[27]">DMAC2_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[28]">DMAC3_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[29]">DMAC4_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[f]">EINT0_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[10]">EINT1_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[11]">EINT2_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[12]">EINT3_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[8]">HardFault_Handler</a> from a31l12x_it.o(i.HardFault_Handler) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[16]">I2C0_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[1a]">I2C1_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[25]">LPUART_Handler</a> from a31l12x_it.o(i.LPUART_Handler) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[c]">LVI_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[7]">NMI_Handler</a> from a31l12x_it.o(i.NMI_Handler) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[2d]">OnMeterError</a> from main.o(i.OnMeterError) referenced from main.o(i.LPUART_InterruptRun)
 <LI><a href="#[2c]">OnMeterResponseReceived</a> from main.o(i.OnMeterResponseReceived) referenced from main.o(i.LPUART_InterruptRun)
 <LI><a href="#[a]">PendSV_Handler</a> from a31l12x_it.o(i.PendSV_Handler) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[26]">RTCC_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[1c]">SC0_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[1d]">SC1_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[18]">SPI0_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[19]">SPI1_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from a31l12x_it.o(i.SVC_Handler) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from a31l12x_it.o(i.SysTick_Handler) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[2a]">SystemInit</a> from system_a31l12x.o(i.SystemInit) referenced from startup_a31l12x.o(.text)
 <LI><a href="#[13]">TIMER40_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[14]">TIMER41_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[15]">TIMER42_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[21]">TIMER43_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[1b]">TIMER50_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[1f]">UART0_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[20]">UART1_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[38]">UARTGetCh</a> from a31l12x_hal_debug_frmwrk.o(i.UARTGetCh) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[37]">UARTGetChar</a> from a31l12x_hal_debug_frmwrk.o(i.UARTGetChar) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[30]">UARTPutChar</a> from a31l12x_hal_debug_frmwrk.o(i.UARTPutChar) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[34]">UARTPutDec</a> from a31l12x_hal_debug_frmwrk.o(i.UARTPutDec) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[35]">UARTPutDec16</a> from a31l12x_hal_debug_frmwrk.o(i.UARTPutDec16) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[36]">UARTPutDec32</a> from a31l12x_hal_debug_frmwrk.o(i.UARTPutDec32) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[31]">UARTPutHex</a> from a31l12x_hal_debug_frmwrk.o(i.UARTPutHex) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[32]">UARTPutHex16</a> from a31l12x_hal_debug_frmwrk.o(i.UARTPutHex16) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[33]">UARTPutHex32</a> from a31l12x_hal_debug_frmwrk.o(i.UARTPutHex32) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[2e]">UARTPuts</a> from a31l12x_hal_debug_frmwrk.o(i.UARTPuts) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[2f]">UARTPuts_</a> from a31l12x_hal_debug_frmwrk.o(i.UARTPuts_) referenced from a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
 <LI><a href="#[17]">USART10_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[e]">WDT_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[d]">WUT_Handler</a> from startup_a31l12x.o(.text) referenced from startup_a31l12x.o(RESET)
 <LI><a href="#[39]">__main</a> from __main.o(!!!main) referenced from startup_a31l12x.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[39]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3a]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3c]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[8b]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[8c]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[3d]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[8d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[41]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[8e]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[90]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[91]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[92]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[93]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[94]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[95]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[96]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[97]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[98]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[99]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[46]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a3]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a4]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[a5]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[a6]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[a7]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[a8]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[a9]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[aa]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[3b]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[ab]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[3e]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[40]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[ac]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[42]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; mainloop &rArr; LPUART_InterruptRun &rArr; Meter_SendCommand &rArr; HAL_LPUART_Transmit &rArr; HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ad]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[52]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[45]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[ae]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[47]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CMPn_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMAC0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMAC1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMAC2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMAC3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMAC4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EINT0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EINT1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EINT2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EINT3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>I2C0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>LVI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>RTCC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SC0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SC1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SPI0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER40_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIMER41_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER42_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIMER43_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER50_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>UART1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>USART10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WDT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WUT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_a31l12x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnMeterResponseReceived
</UL>

<P><STRONG><a name="[b0]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[4b]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[b1]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_Init
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpuart_set_divisors
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec32
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec16
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec
</UL>

<P><STRONG><a name="[b5]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[44]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b8]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[b9]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[ba]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>DEBUG_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, main.o(i.DEBUG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DEBUG_Init &rArr; debug_frmwrk_init &rArr; HAL_UART_Init &rArr; uart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_frmwrk_init
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>DEBUG_MenuPrint</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i.DEBUG_MenuPrint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DEBUG_MenuPrint
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[6a]"></a>HAL_GPIO_ConfigFunction</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, a31l12x_hal_pcu.o(i.HAL_GPIO_ConfigFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_ConfigFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_frmwrk_init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
</UL>

<P><STRONG><a name="[69]"></a>HAL_GPIO_ConfigOutput</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, a31l12x_hal_pcu.o(i.HAL_GPIO_ConfigOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_ConfigOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_frmwrk_init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
</UL>

<P><STRONG><a name="[6f]"></a>HAL_INT_EInt_MaskDisable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, a31l12x_hal_intc.o(i.HAL_INT_EInt_MaskDisable))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
</UL>

<P><STRONG><a name="[55]"></a>HAL_LPUART_ClearStatus</STRONG> (Thumb, 102 bytes, Stack size 4 bytes, a31l12x_hal_lpuart.o(i.HAL_LPUART_ClearStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Transmit
</UL>

<P><STRONG><a name="[57]"></a>HAL_LPUART_ConfigInterrupt</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, a31l12x_hal_lpuart.o(i.HAL_LPUART_ConfigInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_LPUART_ConfigInterrupt &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_SendCommand
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbReceive
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntTransmit
</UL>

<P><STRONG><a name="[6b]"></a>HAL_LPUART_ConfigStructInit</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, a31l12x_hal_lpuart.o(i.HAL_LPUART_ConfigStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
</UL>

<P><STRONG><a name="[6d]"></a>HAL_LPUART_Enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, a31l12x_hal_lpuart.o(i.HAL_LPUART_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_SendCommand
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
</UL>

<P><STRONG><a name="[71]"></a>HAL_LPUART_GetStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, a31l12x_hal_lpuart.o(i.HAL_LPUART_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_IRQHandler_IT
</UL>

<P><STRONG><a name="[58]"></a>HAL_LPUART_Init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, a31l12x_hal_lpuart.o(i.HAL_LPUART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_LPUART_Init &rArr; lpuart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_Peripheral_SetReset2
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_Peripheral_EnableClock2
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_ReceiveByte
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpuart_set_divisors
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
</UL>

<P><STRONG><a name="[5d]"></a>HAL_LPUART_Receive</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, a31l12x_hal_lpuart.o(i.HAL_LPUART_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_LPUART_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_ReceiveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntReceive
</UL>

<P><STRONG><a name="[5c]"></a>HAL_LPUART_ReceiveByte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, a31l12x_hal_lpuart.o(i.HAL_LPUART_ReceiveByte))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Receive
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Init
</UL>

<P><STRONG><a name="[5e]"></a>HAL_LPUART_Transmit</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, a31l12x_hal_lpuart.o(i.HAL_LPUART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_LPUART_Transmit &rArr; HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_TransmitByte
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_ClearStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_SendCommand
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntTransmit
</UL>

<P><STRONG><a name="[5f]"></a>HAL_LPUART_TransmitByte</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, a31l12x_hal_lpuart.o(i.HAL_LPUART_TransmitByte))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Transmit
</UL>

<P><STRONG><a name="[85]"></a>HAL_SCU_ClockMonitoring</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, a31l12x_hal_scu.o(i.HAL_SCU_ClockMonitoring))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[84]"></a>HAL_SCU_ClockSource_Disable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, a31l12x_hal_scu.o(i.HAL_SCU_ClockSource_Disable))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[81]"></a>HAL_SCU_ClockSource_Enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, a31l12x_hal_scu.o(i.HAL_SCU_ClockSource_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[7f]"></a>HAL_SCU_Peripheral_ClockConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, a31l12x_hal_scu.o(i.HAL_SCU_Peripheral_ClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
</UL>

<P><STRONG><a name="[6c]"></a>HAL_SCU_Peripheral_ClockSelection</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, a31l12x_hal_scu.o(i.HAL_SCU_Peripheral_ClockSelection))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
</UL>

<P><STRONG><a name="[59]"></a>HAL_SCU_Peripheral_EnableClock2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, a31l12x_hal_scu.o(i.HAL_SCU_Peripheral_EnableClock2))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[5a]"></a>HAL_SCU_Peripheral_SetReset2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, a31l12x_hal_scu.o(i.HAL_SCU_Peripheral_SetReset2))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Init
</UL>

<P><STRONG><a name="[82]"></a>HAL_SCU_SystemClockChange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, a31l12x_hal_scu.o(i.HAL_SCU_SystemClockChange))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[83]"></a>HAL_SCU_SystemClockDivider</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, a31l12x_hal_scu.o(i.HAL_SCU_SystemClockDivider))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[88]"></a>HAL_UART_ConfigStructInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, a31l12x_hal_uartn.o(i.HAL_UART_ConfigStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_frmwrk_init
</UL>

<P><STRONG><a name="[60]"></a>HAL_UART_Init</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, a31l12x_hal_uartn.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_UART_Init &rArr; uart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_Peripheral_EnableClock2
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_frmwrk_init
</UL>

<P><STRONG><a name="[62]"></a>HAL_UART_Receive</STRONG> (Thumb, 110 bytes, Stack size 36 bytes, a31l12x_hal_uartn.o(i.HAL_UART_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_UART_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ReceiveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTGetChar
</UL>

<P><STRONG><a name="[63]"></a>HAL_UART_ReceiveByte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, a31l12x_hal_uartn.o(i.HAL_UART_ReceiveByte))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTGetCh
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[64]"></a>HAL_UART_Transmit</STRONG> (Thumb, 122 bytes, Stack size 36 bytes, a31l12x_hal_uartn.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TransmitByte
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>

<P><STRONG><a name="[65]"></a>HAL_UART_TransmitByte</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, a31l12x_hal_uartn.o(i.HAL_UART_TransmitByte))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[8]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, a31l12x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>IntReceive</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, main.o(i.IntReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IntReceive &rArr; HAL_LPUART_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_IRQHandler_IT
</UL>

<P><STRONG><a name="[67]"></a>IntTransmit</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, main.o(i.IntTransmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = IntTransmit &rArr; HAL_LPUART_Transmit &rArr; HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Transmit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_ConfigInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_IRQHandler_IT
</UL>

<P><STRONG><a name="[68]"></a>LPUART_Configure</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, main.o(i.LPUART_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LPUART_Configure &rArr; HAL_LPUART_Transmit &rArr; HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_Peripheral_ClockSelection
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Transmit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Enable
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_ConfigStructInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_ConfigInterrupt
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_INT_EInt_MaskDisable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ConfigOutput
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ConfigFunction
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[25]"></a>LPUART_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, a31l12x_it.o(i.LPUART_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LPUART_Handler &rArr; LPUART_IRQHandler_IT &rArr; IntTransmit &rArr; HAL_LPUART_Transmit &rArr; HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_IRQHandler_IT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>LPUART_IRQHandler_IT</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.LPUART_IRQHandler_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LPUART_IRQHandler_IT &rArr; IntTransmit &rArr; HAL_LPUART_Transmit &rArr; HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_GetStatus
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntTransmit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Handler
</UL>

<P><STRONG><a name="[72]"></a>LPUART_InterruptRun</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, main.o(i.LPUART_InterruptRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LPUART_InterruptRun &rArr; Meter_SendCommand &rArr; HAL_LPUART_Transmit &rArr; HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_Task
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_SetResponseCallback
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_SetErrorCallback
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_SendCommand
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
</UL>

<P><STRONG><a name="[79]"></a>Meter_CalculateChecksum</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, meter_protocol.o(i.Meter_CalculateChecksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Meter_CalculateChecksum
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_SendCommand
</UL>

<P><STRONG><a name="[73]"></a>Meter_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, meter_protocol.o(i.Meter_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Meter_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_InterruptRun
</UL>

<P><STRONG><a name="[7d]"></a>Meter_ProcessReceive</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, meter_protocol.o(i.Meter_ProcessReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Meter_ProcessReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_Task
</UL>

<P><STRONG><a name="[77]"></a>Meter_SendCommand</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, meter_protocol.o(i.Meter_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Meter_SendCommand &rArr; HAL_LPUART_Transmit &rArr; HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_SendPreamble
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_CalculateChecksum
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_GetTick
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Transmit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_ConfigInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_InterruptRun
</UL>

<P><STRONG><a name="[7a]"></a>Meter_SendPreamble</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, meter_protocol.o(i.Meter_SendPreamble))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Meter_SendPreamble
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_SendCommand
</UL>

<P><STRONG><a name="[75]"></a>Meter_SetErrorCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, meter_protocol.o(i.Meter_SetErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_InterruptRun
</UL>

<P><STRONG><a name="[74]"></a>Meter_SetResponseCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, meter_protocol.o(i.Meter_SetResponseCallback))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_InterruptRun
</UL>

<P><STRONG><a name="[76]"></a>Meter_Task</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, meter_protocol.o(i.Meter_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Meter_Task &rArr; rbReceive &rArr; HAL_LPUART_ConfigInterrupt &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_ProcessReceive
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_GetTick
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rbReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_InterruptRun
</UL>

<P><STRONG><a name="[7]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31l12x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>OnMeterError</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, main.o(i.OnMeterError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OnMeterError &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.LPUART_InterruptRun)
</UL>
<P><STRONG><a name="[2c]"></a>OnMeterResponseReceived</STRONG> (Thumb, 412 bytes, Stack size 16 bytes, main.o(i.OnMeterResponseReceived))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OnMeterResponseReceived &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.LPUART_InterruptRun)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31l12x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>Port_Init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, a31l12x_portinit.o(i.Port_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Port_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_Peripheral_ClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31l12x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a31l12x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>SystemClock_Config</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, a31l12x_systemclock.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemClock_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_SystemClockDivider
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_SystemClockChange
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_ClockSource_Enable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_ClockSource_Disable
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SCU_ClockMonitoring
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>SystemInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_a31l12x.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_a31l12x.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>UARTGetCh</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTGetCh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTGetCh
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ReceiveByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[37]"></a>UARTGetChar</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTGetChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UARTGetChar &rArr; HAL_UART_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[30]"></a>UARTPutChar</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTPutChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UARTPutChar &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPuts
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutHex32
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutHex16
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutHex
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec32
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec16
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutDec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[34]"></a>UARTPutDec</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTPutDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = UARTPutDec &rArr; UARTPutChar &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[35]"></a>UARTPutDec16</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTPutDec16))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = UARTPutDec16 &rArr; UARTPutChar &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[36]"></a>UARTPutDec32</STRONG> (Thumb, 304 bytes, Stack size 64 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTPutDec32))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = UARTPutDec32 &rArr; UARTPutChar &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[31]"></a>UARTPutHex</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTPutHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UARTPutHex &rArr; UARTPutChar &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[32]"></a>UARTPutHex16</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTPutHex16))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UARTPutHex16 &rArr; UARTPutChar &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[33]"></a>UARTPutHex32</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTPutHex32))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = UARTPutHex32 &rArr; UARTPutChar &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[2e]"></a>UARTPuts</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTPuts))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UARTPuts &rArr; UARTPutChar &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPuts_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[2f]"></a>UARTPuts_</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, a31l12x_hal_debug_frmwrk.o(i.UARTPuts_))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = UARTPuts_ &rArr; UARTPuts &rArr; UARTPutChar &rArr; HAL_UART_Transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPuts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init)
</UL>
<P><STRONG><a name="[56]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_ClearStatus
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_ConfigInterrupt
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnMeterError
</UL>

<P><STRONG><a name="[54]"></a>debug_frmwrk_init</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, a31l12x_hal_debug_frmwrk.o(i.debug_frmwrk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = debug_frmwrk_init &rArr; HAL_UART_Init &rArr; uart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ConfigOutput
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ConfigFunction
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ConfigStructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Init
</UL>

<P><STRONG><a name="[43]"></a>main</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = main &rArr; mainloop &rArr; LPUART_InterruptRun &rArr; Meter_SendCommand &rArr; HAL_LPUART_Transmit &rArr; HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainloop
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[89]"></a>mainloop</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.mainloop))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = mainloop &rArr; LPUART_InterruptRun &rArr; Meter_SendCommand &rArr; HAL_LPUART_Transmit &rArr; HAL_LPUART_ClearStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_InterruptRun
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_MenuPrint
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>rbReceive</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, main.o(i.rbReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rbReceive &rArr; HAL_LPUART_ConfigInterrupt &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_ConfigInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_Task
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6e]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART_Configure
</UL>

<P><STRONG><a name="[7b]"></a>Meter_GetTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, meter_protocol.o(i.Meter_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_Task
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Meter_SendCommand
</UL>

<P><STRONG><a name="[5b]"></a>lpuart_set_divisors</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, a31l12x_hal_lpuart.o(i.lpuart_set_divisors))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lpuart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LPUART_Init
</UL>

<P><STRONG><a name="[61]"></a>uart_set_divisors</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, a31l12x_hal_uartn.o(i.uart_set_divisors))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_set_divisors
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[51]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
